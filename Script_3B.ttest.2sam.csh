#!/bin/tcsh

##### This file test 3dXClustSim (ETAC) via 3dttest++,
##### with the new hpow ability.

##### This particular script is for 2-sided tests,
##### which is controlled by setting Anum and Bnum, far below.

##### set master control variables from the arguments
#     stim = stimulus name               [e.g., Stim10]
#     case = name for these output files [e.g., 0666] ALL DIGITS
#     suff = suffix for this analysis    [e.g., A]    OPTIONAL

if( $#argv < 2 )then
  echo "Need 2 args: stim case" ; exit 1
endif

set stim = $argv[1]
set case = $argv[2]
set pref = TT2sam
if( $#argv > 2 )then
  set pref = ${pref}$argv[3]
endif

##### set some settings for the setup

unset noclobber
set echo

# set thread count?
if( $?SLURM_CPUS_PER_TASK )then
  setenv OMP_NUM_THREADS $SLURM_CPUS_PER_TASK
else
  unsetenv OMP_NUM_THREADS
endif

# set temporary workspace dir?
# (this should be a local SSD, for efficiency)
if( $?SLURM_JOBID )then
  set tempdir = /lscratch/$SLURM_JOBID
else
  set tempdir = .
endif

# some AFNI settings
setenv AFNI_COMPRESSOR   NONE
setenv AFNI_AUTOGZIP     NO
setenv AFNI_NOPLUGINS    YES
setenv AFNI_DONT_LOGFILE YES

# seed string for pseudorandom t-test command generation
set tseed = $case

# number of subjects in each set (Bnum=0 --> 1-sample t-test)
set Anum = 20
set Bnum = 20

# used once later
set site = Beijing

set doClustsim = 0
set doPruning  = 0

# directory with all the good stuff (directory above this one)
set topdir = `dirname $cwd`
cd $topdir

# directory with all the scripts (e.g., this one)
set scdir = $topdir/Scripts

# name of output directory
set odir = ${stim}.${pref}
mkdir -p $odir

# get list of all subjects (for random selection in make_one_ttest_command.csh)
set Slist = ( `cat $scdir/$site.list.txt` )

# list of data directories to use in making the t-test command
set Dlist = ( $topdir/${stim}.Case01 $topdir/${stim}.Case02 \
              $topdir/${stim}.Case03 $topdir/${stim}.Case04 \
              $topdir/${stim}.Case05 )

##### set various parameters for the clustering stuff

# NN clustering (NN1 or NN2 or NN3)
set nnlev = NN2

# list of blurs to use in ETAC
set blist = (  4    7    10   )
set bname = ( B4.0 B7.0 B10.0 )

# Stuff for/from ClustSim
#  -- p-thresholds for ETAC are chosen this way to
#     facilitate comparison with Clustsim, if desired

# pval table generated by 3dClustSim -LOTS
set pthr  = (  0.10     0.09     0.08     0.07     0.06              \
               0.05     0.04     0.03     0.02     0.015     0.01    \
               0.007    0.005    0.003    0.002    0.0015    0.001   \
               0.0007   0.0005   0.0003   0.0002   0.00015   0.0001  \
               0.00007  0.00005  0.00003  0.00002  0.000015  0.00001  )

# select which pvals to use by choosing row number in pthr table
#   [e.g., prow=15 --> pval=0.002]
# then select the actual pvals from the pthr table
# then set index for 1dcat-ing correct cluster threshold from 3dClustSim output
#   1D file (must reduce prow by 1 since 1dcat uses 0-based row indexes)
# then set z-stat threshold arrays (1 and 2 sided tests)

# p-threshold =  0.01  0.005  0.002  0.001
set prow_list = ( 11    13     15     17   )
# names to be used for each prow
set Xnam_list = ( P010 P005 P002 P001 )
# these lists will be filled out in the loop below:
#  pval_list = actual p-values
set pval_list = ( $prow_list )
set zval_list = ( $prow_list )
# number of p-values we are testing
set nump      = $#prow_list
# Clustsim column number for FPR=0.05
set pcol      = 6

foreach pind ( `count -dig 1 1 $nump` )
  set prow             = $prow_list[$pind]
  set pval             = $pthr[$prow]
  set pval_list[$pind] = $pval
  set zval_list[$pind] = `ccalc "qginv($pval)"`
end

# list of all p-values to use in one string (for ETAC)

set pval_all = "$pval_list[1]"
foreach pind ( `count -dig 1 2 $nump` )
  set pval_all = "$pval_all,$pval_list[$pind]"
end

# list of all hpow to use in one string (for ETAC)
set hpow_all = 2
set s1hnam   = s1h${hpow_all}
set s2hnam   = s2h${hpow_all}

# name for 3dXClustSim outputs
set Xnam_all = "P010-001"

# compute rmm for 3dmerge from NN type
if( $nnlev == "NN1" )then
  set rmm = 1.111
else if( $nnlev == "NN2" )then
  set rmm = 1.555
else
  set rmm = 1.888
endif

# setup the command to run 3dttest++ -ETAC

# prefix for Xclustsim results
set prefix  = ${pref}.$case
set Xprefix = $prefix
set Xttset  = ${prefix}.nii.gz

# Exit if last output file already exists
if( -f $odir/$prefix.${Xnam_all}${s2hnam}.ETACmask.2sid.9perc.nii.gz )then
  echo "=== Run already finished -- exiting ==="
  exit 0
endif

# remove any earlier instances of files for this case
find $odir -maxdepth 1 -name \*.$case.\* -exec \rm -rf {} \;

# set mask dataset
set mask = $topdir/mask_interGC.nii

# extra stuff for the 3dttest++ command generation
set Olist = ( -ETAC -ETAC_blur $blist -ETAC_arg -verb -prefix_clustsim $prefix )

if( $doClustsim ) set Olist = ( -Clustsim $Olist )

# add commands to 3dttest++ for each 3dXClustSim case,
# make the lists of 3dXClustSim output files

set Olist = ( $Olist -ETAC_opt name=${Xnam_all}${s1hnam}:${nnlev}:1sid:pthr=${pval_all}:hpow=${hpow_all}:fpr=ALL )
set Olist = ( $Olist -ETAC_opt name=${Xnam_all}${s2hnam}:${nnlev}:2sid:pthr=${pval_all}:hpow=${hpow_all}:fpr=ALL )

# ---------- actually create the 3dttest++ command (in a sub-script) ---------
set noglob
source $scdir/Script_3Q.make_one_tt_command.csh
unset noglob

# and put the command into a file to be run below
echo "$ttcmd" > $odir/tt.$case.csh

##### now run the t-test command (this is where most of the CPU time is)

cd $odir
tcsh tt.$case.csh

##### prune the ETAC results

if( $doPruning )then
  foreach eee ( ${prefix}.${Xnam_all}*.ETACmask.*.nii.gz )
    set nnn = `3dBrickStat -count -non-zero $eee`
    if( $nnn == 0 )\rm $eee
  end
endif

##### find the Clustsim results and prune them

if( $doPruning && $doClustsim )then
  foreach bnam ( $bname )
  foreach pind ( `count -dig 1 1 $nump` )

    set prow  = $prow_list[$pind]
    set zval  = $zval_list[$pind]
    set pval  = $pval_list[$pind]

    set csize = `1dcat ${prefix}.CSim${bnam}.NN2_1sided.1D"[$pcol]{$prow}"`

    3dclust -dxyz=1 -1tindex 1 -2thresh -9999 $zval -quiet             \
            -savemask ${prefix}.${bnam}.Cmask.1pos.P$pval.nii -binary  \
            1.555 $csize ${prefix}.${bnam}.nii.gz

    3dclust -dxyz=1 -1tindex 1 -2thresh -$zval 9999 -quiet             \
            -savemask ${prefix}.${bnam}.Cmask.1neg.P$pval.nii -binary  \
            1.555 $csize ${prefix}.${bnam}.nii.gz

    set csize = `1dcat ${prefix}.CSim${bnam}.NN2_2sided.1D"[$pcol]{$prow}"`

    3dclust -dxyz=1 -1tindex 1 -2thresh -$zval $zval -quiet            \
            -savemask ${prefix}.${bnam}.Cmask.2sid.P$pval.nii -binary  \
            1.555 $csize ${prefix}.${bnam}.nii.gz

  end
  end
endif

##### finish up

if( $doPruning )then
  \rm -f ${prefix}.nii.gz tt.${case}.csh
  \rm -f ${prefix}.*.mthresh.* ${prefix}.*.5percent.txt
  if( $doClustsim ) \rm -f ${prefix}.*NN1*.1D ${prefix}.*NN3*.1D ${prefix}.*.cmd ${prefix}.*bisided.1D
else
  gzip -1v ${prefix}.*.nii
endif

time
exit 0
